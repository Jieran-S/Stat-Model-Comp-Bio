setwd("~/Desktop/EthZ/Courses/Sem_4/Statistical_Model_CB/Exercise/Project_4_student/code")
setwd("~/Desktop/EthZ/Courses/Sem_4/Statistical_Model_CB/Exercise/Project_4_student/code")
??parseAlignment
knitr::opts_chunk$set(echo = TRUE)
source("code/profileHMM.R", echo = FALSE)
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages({
library()
})
GBinPr <- parseAlignment("data/GTP_binding_proteins.txt")
ATPase <- parseAlignment("data/ATPases.txt")
GBinPr <- parseAlignment("data/GTP_binding_proteins.txt")
ATPase <- parseAlignment("data/ATPases.txt")
ATPase <- parseAlignment("data/ATPases.txt")
GBinPr <- parseAlignment("data/GTP_binding_proteins.txt")
ATPase <- parseAlignment("data/ATPases.txt")
GBinPrHMM <- learnHMM(GBinPr)
ATPaseHMM <- learnHMM(ATPase)
View(ATPaseHMM)
MaxMatchInd <- which.max(GBinPrHMM$mE)
MaxMatchInd
head(GBinPrHMM$mE)
sum(GBinPrHMM$mE[1])
sum(GBinPrHMM$mE[2])
sum(GBinPrHMM$mE[3])
GBinPrHMM$mE[3]
GBinPrHMM$mE[,3]
sum(GBinPrHMM$mE[,2])
sum(GBinPrHMM$mE[,3])
sum(GBinPrHMM$mE[,4])
GBinMaxMatchInd <- which.max(rowSums(GBinPrHMM$mE))
GBinMaxMatchInd
rowSums(GBinPrHMM$mE)
GBinMaxMatchInd <- which.max(rowSums(GBinPrHMM$mE[,-1]))
rowSums(GBinPrHMM$mE[,-1])
GBinMaxMatchInd <- which.max(rowSums(GBinPrHMM$mE[,-1]))
GBinMaxMatchInd
GBinMaxInsertInd <- which.max(rowSums(GBinPrHMM$iE[,-1]))
GBinMaxInsertInd
plot(GBinPrHMM$mE[GBinMaxMatchInd,])
plot(GBinPrHMM$mE[GBinMaxMatchInd,], ylab = "frequency")
plot(GBinPrHMM$mE[GBinMaxMatchInd,], ylab = "frequency", xlab = "position")
ATPMaxMatchInd <- which.max(rowSums(ATPaseHMM$mE[,-1]))
plot(ATPaseHMM$mE[ATPMaxMatchInd,], ylab = "frequency", xlab = "position")
ATPMaxInsertInd <- which.max(rowSums(ATPaseHMM$iE[,-1]))
plot(ATPaseHMM$iE[ATPMaxInsertInd,], ylab = "frequency", xlab = "position")
plot(ATPaseHMM$iE[ATPMaxInsertInd,], ylab = "frequency", xlab = "position", main = rownames(ATPaseHMM$iE)[ATPMaxInsertInd])
GBinMaxMatchInd <- which.max(rowSums(GBinPrHMM$mE[,-1]))
plot(GBinPrHMM$mE[GBinMaxMatchInd,], ylab = "frequency", xlab = "Match Probability",
main = sprintf("Max Match Frequency symbol: %s", rownames(GBinPrHMM$mE)[GBinMaxMatchInd]))
GBinMaxInsertInd <- which.max(rowSums(GBinPrHMM$iE[,-1]))
plot(GBinPrHMM$iE[GBinMaxInsertInd,], ylab = "frequency", xlab = "Match Probability",
main = sprintf("Max Match Frequency symbol: %s", rownames(GBinPrHMM$iE)[GBinMaxInsertInd]))
ATPMaxMatchInd <- which.max(rowSums(ATPaseHMM$mE[,-1]))
plot(ATPaseHMM$mE[ATPMaxMatchInd,], ylab = "frequency", xlab = "Match Probability",
main = sprintf("Max Match Frequency symbol: %s", rownames(ATPaseHMM$mE)[ATPMaxMatchInd]))
ATPMaxInsertInd <- which.max(rowSums(ATPaseHMM$iE[,-1]))
plot(ATPaseHMM$iE[ATPMaxInsertInd,], ylab = "frequency", xlab = "Insertion Probability",
main = sprintf("Max Emission Frequency symbol: %s", rownames(ATPaseHMM$iE)[ATPMaxInsertInd]))
GBinMaxMatchInd <- which.max(rowSums(GBinPrHMM$mE[,-1]))
plot(GBinPrHMM$mE[GBinMaxMatchInd,], xlab = "positions", ylab = "Match Probability",
main = sprintf("Max Match Frequency symbol: %s", rownames(GBinPrHMM$mE)[GBinMaxMatchInd]))
GBinMaxInsertInd <- which.max(rowSums(GBinPrHMM$iE[,-1]))
plot(GBinPrHMM$iE[GBinMaxInsertInd,], xlab = "positions", ylab = "Match Probability",
main = sprintf("Max Match Frequency symbol: %s", rownames(GBinPrHMM$iE)[GBinMaxInsertInd]))
ATPMaxMatchInd <- which.max(rowSums(ATPaseHMM$mE[,-1]))
plot(ATPaseHMM$mE[ATPMaxMatchInd,], xlab = "positions", ylab = "Match Probability",
main = sprintf("Max Match Frequency symbol: %s", rownames(ATPaseHMM$mE)[ATPMaxMatchInd]))
ATPMaxInsertInd <- which.max(rowSums(ATPaseHMM$iE[,-1]))
plot(ATPaseHMM$iE[ATPMaxInsertInd,], xlab = "positions", ylab = "Insertion Probability",
main = sprintf("Max Emission Frequency symbol: %s", rownames(ATPaseHMM$iE)[ATPMaxInsertInd]))
GBinMaxMatchInd <- which.max(rowSums(GBinPrHMM$mE[,-1]))
plot(GBinPrHMM$mE[GBinMaxMatchInd,], xlab = "positions", ylab = "Match Probability",
main = sprintf("Max Match Frequency symbol: %s", rownames(GBinPrHMM$mE)[GBinMaxMatchInd]))
GBinMaxInsertInd <- which.max(rowSums(GBinPrHMM$iE[,-1]))
plot(GBinPrHMM$iE[GBinMaxInsertInd,], xlab = "positions", ylab = "Insertion Probability",
main = sprintf("Max Match Frequency symbol: %s", rownames(GBinPrHMM$iE)[GBinMaxInsertInd]))
plot(GBinPrHMM$mE[GBinMaxMatchInd,], xlab = "positions", ylab = "Match Probability",
main = sprintf("Max Match Frequency symbol: %s", rownames(GBinPrHMM$mE)[GBinMaxMatchInd]))
GBinMaxMatchInd <- which.max(rowSums(GBinPrHMM$mE[,-1]))
plot(GBinPrHMM$mE[GBinMaxMatchInd,], xlab = "positions", ylab = "Match Probability",
main = sprintf("Max Match Frequency symbol: %s", rownames(GBinPrHMM$mE)[GBinMaxMatchInd]))
GBinMaxInsertInd <- which.max(rowSums(GBinPrHMM$iE[,-1]))
plot(GBinPrHMM$iE[GBinMaxInsertInd,], xlab = "positions", ylab = "Insertion Probability",
main = sprintf("Max Insertion Frequency symbol: %s", rownames(GBinPrHMM$iE)[GBinMaxInsertInd]))
ATPMaxMatchInd <- which.max(rowSums(ATPaseHMM$mE[,-1]))
plot(ATPaseHMM$mE[ATPMaxMatchInd,], xlab = "positions", ylab = "Match Probability",
main = sprintf("Max Match Frequency symbol: %s", rownames(ATPaseHMM$mE)[ATPMaxMatchInd]))
ATPMaxInsertInd <- which.max(rowSums(ATPaseHMM$iE[,-1]))
plot(ATPaseHMM$iE[ATPMaxInsertInd,], xlab = "positions", ylab = "Insertion Probability",
main = sprintf("Max Insertion Frequency symbol: %s", rownames(ATPaseHMM$iE)[ATPMaxInsertInd]))
UnknowPr <- parseAlignment("data/Unclassified_proteins.txt")
UnknowPr <- parseAlignment("data/Unclassified_proteins.txt")
UnknowPr <- parseAlignment("data/Unclassified_proteins.txt")
source("code/profileHMM.R", echo = FALSE)
```{r load unknown dataset}
UnknowPr <- parseAlignment("data/Unclassified_proteins.txt")
UnknowPr <- parseAlignment("data/Unclassified_proteins.txt")
alignment <- "data/Unclassified_proteins.txt"
alignment <- scan(file=alignmentFile, what=character(0))
alignmentFile <- "data/Unclassified_proteins.txt"
alignment <- scan(file=alignmentFile, what=character(0))
# Split rows and convert to matrix
alignment.mat <- matrix(nrow=length(alignment), ncol=nchar(alignment[[1]]))
for(i in 1:length(alignment)) {
alignment.mat[i,] <- unlist(strsplit(alignment[i],""))
}
alignment
UnknowPr <- parseProteins("data/Unclassified_proteins.txt")
UnknowPr
View(forward)
Odd1 <- forward(HMM = GBinPrHMM, seq = UnknowPr[[1]])
Odd1
OddList <- unlist(lapply(UnknowPr, function(protein){
OddGTP <- forward(HMM = GBinPrHMM, seq = protein)
OddATP <- forward(HMM = ATPaseHMM, seq = protein)
return(OddGTP - OddATP)
}))
plot(OddList)
plot(OddList, xlab = "Protein index", ylab = "log odd GTP-binding over ATPase")
ATPaseHMM['iE']
apply(ATPaseHMM['iE'], 2, which.max)
apply(ATPaseHMM['iE'], 2, mean)
dim(ATPaseHMM['iE'])
apply(as.data.frame(ATPaseHMM['iE']), 2, mean)
apply(as.data.frame(ATPaseHMM['iE']), 2, which.max)
apply(as.data.frame(ATPaseHMM['iE']), 2, max)
as.data.frame(ATPaseHMM['iE'])
HMMObject <- ATPaseHMM
emSlot <- 'iE'
EmMat<- as.data.frame(HMMObject[emSlot])
EmMat
MaxInd <- apply(EmMat, 2, max)
MaxInd
which.max(MaxInd)
MaxInd <- which.max(apply(EmMat, 2, max))
plotDF <- data.frame(freq = EmMat[,MaxInd],
symbol = rownames(EmMat))
plotDF
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages({
library(ggplot2)
})
ggplot(plotDF, aes(x = symbol, y = freq)) +
geom_bar(stat="identity", color="blue", fill="white")
ggplot(plotDF, aes(x = symbol, y = freq)) +
geom_bar(stat="identity", color="blue", fill="white") + ylab("frequency")
plotMaxFreq(HMMObject = ATPaseHMM, emSlot = "iE") + ylab("Insertion probability") + main("ATPase Protein")
plotMaxFreq <- function(HMMObject, emSlot) {
EmMat <- as.data.frame(HMMObject[emSlot])
MaxInd <- which.max(apply(EmMat, 2, max))
plotDF <- data.frame(freq = EmMat[,MaxInd],
symbol = rownames(EmMat))
ggplot(plotDF, aes(x = symbol, y = freq)) +
geom_bar(stat="identity", color="blue", fill="white")
}
plotMaxFreq(HMMObject = ATPaseHMM, emSlot = "iE") + ylab("Insertion probability") + main("ATPase Protein")
plotMaxFreq <- function(HMMObject, emSlot) {
EmMat <- as.data.frame(HMMObject[emSlot])
MaxInd <- which.max(apply(EmMat, 2, max))
plotDF <- data.frame(freq = EmMat[,MaxInd],
symbol = rownames(EmMat))
ggplot(plotDF, aes(x = symbol, y = freq)) +
geom_bar(stat="identity", color="blue", fill="white")
}
plotMaxFreq(HMMObject = ATPaseHMM, emSlot = "iE") + ylab("Insertion probability") + title("ATPase Protein")
plotMaxFreq(HMMObject = ATPaseHMM, emSlot = "iE") + ylab("Insertion probability") + ggtitle("ATPase Protein")
plotMaxFreq <- function(HMMObject, emSlot) {
EmMat <- as.data.frame(HMMObject[emSlot])
MaxInd <- which.max(apply(EmMat, 2, max))
plotDF <- data.frame(freq = EmMat[,MaxInd],
symbol = rownames(EmMat))
ggplot(plotDF, aes(x = symbol, y = freq)) +
geom_bar(stat="identity", color="blue", fill="white")
}
plotMaxFreq(HMMObject = GBinPrHMM, emSlot = "iE") + ylab("Insertion probability") + ggtitle("GTP-binding Protein")
plotMaxFreq(HMMObject = GBinPrHMM, emSlot = "mE") + ylab("Match probability") + ggtitle("GTP-binding Protein")
plotMaxFreq(HMMObject = ATPaseHMM, emSlot = "iE") + ylab("Insertion probability") + ggtitle("ATPase Protein")
plotMaxFreq(HMMObject = ATPaseHMM, emSlot = "mE") + ylab("Match probability") + ggtitle("ATPase Protein")
